<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_Enabler_SIP_Subscription_Client_User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="using_the_enabler">

	<title>Using
		the &THIS.PLATFORM;
		JAIN SLEE &THIS.ENABLER;
		Enabler
	</title>

	<para>In the last chapter we integrated the Enabler in the JAIN SLEE
		Service's Sbb, the Parent Sbb, in this chapter it is explained how to
		use the Enabler's Sbb, the Child Sbb.</para>
	<para>Enabler performs following tasks:</para>
	<variablelist>
		<varlistentry>
			<term>manage subscription</term>
			<listitem>
				<para>send subscription events on behalf of Parent Sbb</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>automatic refresh</term>
			<listitem>
				<para>based on values exchanged between Enabler and Server,
					Enabler keeps track of subscription life time(expiration)
					and issues
					refresh requests to Server</para>
			</listitem>
		</varlistentry>

	</variablelist>
	<mediaobject>
		<imageobject>
			<imagedata width="300px" align="center" fileref="images/interactions1.png"
				format="PNG" />
		</imageobject>
		<caption>
			<para>JAIN
				SLEE &THIS.ENABLER;
				Enabler control flow
			</para>
		</caption>
	</mediaobject>

	<section id="the_child_sbblocalobject_interface">

		<title>The Child's SbbLocalObject Interface</title>

		<para>The &THIS.PLATFORM;
			JAIN SLEE &THIS.ENABLER;
			Enabler Sbb, the Child Sbb, implements the
			<literal>org.mobicents.slee.enabler.sip.SubscriptionClientChildSbbLocalObject
			</literal>
			, which extends the
			<literal>org.mobicents.slee.SbbLocalObjectExt</literal>
			and
			<literal>org.mobicents.slee.enabler.sip.SubscriptionClientChild
			</literal>
			interfaces, the latter declares the methods which can be used to
			interact with the SIP Event Server:
		</para>

		<programlisting language="Java" role="JAVA"><![CDATA[
package org.mobicents.slee.enabler.sip;

	public SubscriptionData getSubscriptionData();

	public void subscribe(SubscriptionData subscriptionData) throws SubscriptionException;

	public void subscribe(SubscriptionData subscriptionData, SubscriptionRequestContent content) throws SubscriptionException;

	public void unsubscribe() throws SubscriptionException;
		]]>
		</programlisting>

		<variablelist>

			<varlistentry>
				<term>
					The
					<literal>getSubscriptionData();
					</literal>
					method:
				</term>
				<listitem>
					<para>returns the static data related to the subscription, which can be used to, for instance, retrieve the resource subscribed.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>public void subscribe(SubscriptionData subscriptionData) throws SubscriptionException;</literal>
					method:
				</term>
				<listitem>
					<para>
						Requests the creation of a new SIP subscription, from the specified subscription data. For detailed information related with the SubscriptionData class, please read its javadoc.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>public void subscribe(SubscriptionData subscriptionData, SubscriptionRequestContent content) throws SubscriptionException;</literal>
		
					method:
				</term>
				<listitem>
					<para>
						Requests the creation of a new SIP subscription, from the specified subscription data, and with content to be included in the initial subscribe request. For detailed information related with the SubscriptionData and SubscriptionRequestContent classes, please read its javadoc.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>unsubscribe() throws SubscriptionException;
					</literal>
					method:
				</term>
				<listitem>
					<para>
						this method should be called to explicitly to terminate the subscription. The subscription will be effectively terminated once a notification with terminated state is received. If enabler is refreshing, when this method is called,
						it will throw exception.
					</para>
				</listitem>
			</varlistentry>

		</variablelist>

	</section>

	<section id="creating_and_retrieving_the_child_sbb">
		<title>Creating And Retrieving The Child Sbb</title>
		<para>The Child Relation in the Parent Sbb Abstract Class is used to
			create and retrieve the Child Sbb:</para>
		<programlisting language="Java" role="JAVA"><![CDATA[
	SubscriptionClientChildLocalObject sbb = null;
    // creation
    try {
        sbb = (SubscriptionClientChildLocalObject) getSipSubscriptionClientChildRelation().create(childName);                
    }
    catch (Exception e) {
      tracer.severe("Failed to create child sbb", e);      
    }
    // retrieval
    try {
        sbb = (SubscriptionClientChildLocalObject) getSipSubscriptionClientChildRelation().get(childName);                
    }
    catch (Exception e) {
      tracer.severe("Failed to retrieve child sbb", e);      
    }]]>
		</programlisting>		
	</section>
	<section id="configuring_child_sbb">
		<title>Enabler configuration</title>
		<para>
			Enabler can be configured with
			<acronym>SLEE</acronym>
			environment entries. Currently following entries are supported:
		</para>
		<table frame="all" pgwide="1">
			<title>Environment entry table
			</title>
			<tgroup colsep="1" cols="3">
				<colspec colnum="1" colname="c0" colwidth="2*" />
				<colspec colnum="2" colname="c1" colwidth="3*" />
				<colspec colnum="3" colname="c2" colwidth="3*" />
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<para>server.address
							</para>
						</entry>
						<entry>
							<para>java.lang.String
							</para>
						</entry>
						<entry>
							<para>Specifies address to which requests should be forwarded. It
								has form of ip:port pair.
							</para>
						</entry>
					</row>
					<row>
						<entry>
							<para>expires.drift
							</para>
						</entry>
						<entry>
							<para>java.lang.Integer
							</para>
						</entry>
						<entry>
							<para>Specifies time drift, in seconds, between value of
								Expires/Min-Expires values and automatic refresh performed by
								enabler. For instance if Expires value passed(and accepted by
								Server)
								is 3600, time drift set to 10, Enabler will refresh
								publication
								after 3590
							</para>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</section>



</chapter>

