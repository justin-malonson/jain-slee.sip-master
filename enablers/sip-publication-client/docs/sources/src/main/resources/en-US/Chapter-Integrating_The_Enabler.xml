<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_Enabler_SIP_Publication_Client_User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="integrating">

	<title>Integrating
		the &THIS.PLATFORM;
		JAIN SLEE &THIS.ENABLER;
		Enabler
	</title>

	<para>This chapter explains how to setup a JAIN SLEE Service Sbb to use
		the Enabler.</para>

	<para>In short terms, a Service's Sbb will define the Enabler's Sbb as
		a child, and to achieve that it will need to setup the XML Descriptor,
		Abstract Class and SbbLocalObject interface.</para>
	
	<important>
		<para>The Service's Sbb will be referred as the Parent Sbb in the
			following sections.</para>
	</important>
	<para>Relation betweeen Parent Sbb, Enabler instance and publications in Server look as follows:</para>
	<mediaobject>
		<imageobject>
			<imagedata width="300px" align="center"
			fileref="images/design1.png" format="PNG" />
		</imageobject>
		<caption>
			<para>JAIN SLEE &THIS.ENABLER; Enabler design
			</para>
		</caption>
	</mediaobject>
	
	<section id="parent_sbb_local_object_interface">

		<title>The Parent's SbbLocalObject Interface</title>

		<para>The &THIS.PLATFORM;
			JAIN SLEE &THIS.ENABLER;
			Enabler Sbb provides synchronous callbacks to the Parent's Sbb, and
			that can only be achieved if the Parent's SbbLocalObject extends a
			specific Java interface, deployed also by the Enabler, and provides
			it's SbbLocalObject to the Enabler's Sbb, through a specific method
			exposed by the latter interface. The Enabler stores the Parent's
			SbbLocalObject and uses it when a callback to the Parent's Sbb is
			needed.
		</para>

		<para>
			The SbbLocalObject which must be used or extended by the Parent's Sbb
			is named
			<literal>org.mobicents.slee.enabler.sip.PublicationClientParentSbbLocalObject
			</literal>
			, which extends the
			<literal>org.mobicents.slee.SbbLocalObjectExt</literal>
			and
			<literal>org.mobicents.slee.enabler.sip.PublicationClientParent
			</literal>
			interfaces, the latter declares the callbacks which must be
			implemented in the Parent's Sbb Abstract Class:
		</para>

		<programlisting language="Java" role="JAVA"><![CDATA[
package org.mobicents.slee.enabler.sip;

public interface PublicationClientParent {

	public void newPublicationSucceed(PublicationClientChildSbbLocalObject child);

	public void modifyPublicationSucceed(PublicationClientChildSbbLocalObject child);

	public void removePublicationSucceed(PublicationClientChildSbbLocalObject child);

	public void newPublicationFailed(int errorCode,
			PublicationClientChildSbbLocalObject sbbLocalObject);

	public void modifyPublicationFailed(int errorCode,
			PublicationClientChildSbbLocalObject sbbLocalObject);

	public void refreshPublicationFailed(int errorCode,
			PublicationClientChildSbbLocalObject sbbLocalObject);

	public void removePublicationFailed(int errorCode,
			PublicationClientChildSbbLocalObject sbbLocalObject);
}
		]]>
		</programlisting>

		<variablelist>

			<varlistentry>
				<term>
					The
					<literal>newPublicationSucceed(PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that new publication request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>
					The
					<literal>modifyPublicationSucceed(PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that modify publication request succeed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>removePublicationSucceed(PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that remove publication request succeed.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>newPublicationFailed(int,PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that new publication request failed. Enabler must be discarded.</para>
				</listitem>
			</varlistentry>
			
			
			<varlistentry>
				<term>
					The
					<literal>refreshPublicationFailed(int,PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that refresh publication request failed. Enabler must be discarded.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>modifyPublicationFailed(int,PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that modify publication request failed. Enabler must be discarded.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					The
					<literal>removePublicationFailed(int,PublicationClientChildSbbLocalObject)</literal>
					method:
				</term>
				<listitem>
					<para>Callback method indicating that remove publication request failed. Enabler must be discarded.</para>
				</listitem>
			</varlistentry>

		</variablelist>

	</section>

	<section id="parent_sbb_abstract_class">
		<title>The Parent's Sbb Abstract Class</title>
		<para>
			The Parent Sbb Abstract Class must implement the callbacks on it's
			SbbLocalObject, that is, must implement the
			<literal>org.mobicents.slee.enabler.sip.PublicationClientParent</literal>
			interface discussed in last section.
		</para>
		<para>
			The Enabler is a Child Sbb. Parent requires JAIN SLEE 1.1 Child
			Relation to
			access Enabler. SLEE specification mandates parent to
			declare an
			abstract method to retrieve the
			<literal>org.mobicents.slee.ChildRelationExt</literal>
			object, which is used to create or access specific Child Sbbs. This
			method may be declared as follows:
		</para>
		<programlisting language="Java" role="JAVA"><![CDATA[
	public abstract ChildRelationExt getSipPublicationClientChildRelation();
		]]>
		</programlisting>
	</section>

	<section id="parent_sbb_xml_descriptor">
		<title>The Parent Sbb XML Descriptor</title>
		<para>The Parent Sbb must define following information in its
			descriptor
			</para>
		<variablelist>
			<varlistentry>
				<term>child reference</term>
				<listitem>
					<para>A reference to the Enabler's Child Sbb is defined right after
						the Parent's Sbb Vendor ID element, using the following XML
						element:
			</para>
					<programlisting language="XML" role="XML"><![CDATA[
			<sbb-ref>
	    		<sbb-name>SipPublicationClientChildSbb</sbb-name>
				<sbb-vendor>org.mobicents</sbb-vendor>
				<sbb-version>1.0</sbb-version>
	    		<sbb-alias>sipPubClientChildSbb</sbb-alias>
	    	</sbb-ref>
			]]>
			</programlisting>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>child relation method</term>
				<listitem>
					<para>The method name to get the Enabler's ChildRelation object
						must
						be defined after the CMP Fields (if any), this XML element links the
						sbb-alias previously defined with the abstract method declared in
						the
						Parent's Sbb Abstract Class:</para>
					<programlisting language="XML" role="XML"><![CDATA[
				<get-child-relation-method>                	
		        	<sbb-alias-ref>sipPubClientChildSbb</sbb-alias-ref>
		            <get-child-relation-method-name>getSipPublicationClientChildRelation</get-child-relation-method-name>
		            <default-priority>0</default-priority>
		        </get-child-relation-method>
				]]>
				</programlisting>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Sbb Local Object</term>
				<listitem>
					<para>
						After the
						<literal>sbb-abstract-class</literal>
						element the Parent's SbbLocalObject interface name is defined:
					</para>
					<programlisting language="XML" role="XML"><![CDATA[
		<sbb-local-interface>
            <sbb-local-interface-name>...</sbb-local-interface-name>
        </sbb-local-interface>
		]]>
		</programlisting>

				</listitem>
			</varlistentry>

		</variablelist>

	</section>



</chapter>

